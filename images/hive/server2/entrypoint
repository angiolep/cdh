#!/usr/bin/env bash

#
# Setup user accounts with proper ~/.bash_profile
# --------------   user   group   domain
/etc/docker/setup  hdfs   hadoop  docker.net

#
# Render configuration templates by replacing {{ PLACEHOLDER }}
# with corresponding shell environment variable values
# ---------------
/etc/docker/render /etc/hadoop/conf/core-site.xml
/etc/docker/render /etc/hadoop/conf/hdfs-site.xml
/etc/docker/render /etc/hadoop/conf/mapred-site.xml
/etc/docker/render /etc/hadoop/conf/yarn-site.xml
/etc/docker/render /etc/hive/conf/hiveserver2-site.xml
/etc/docker/render /etc/hive/conf/beeline-site.env


# Publish the Hadoop configuration through the /shared/conf directory
mkdir -p /shared/conf
rm -f  /shared/conf/hive-site.xml /shared/conf/beeline-site.env

cp /etc/hive/conf/hive-site.xml /shared/conf
cp /etc/hive/conf/beeline-site.env /shared/conf


# Make TLS/SSL Certificates
# TODO chmod +x /etc/docker/mkcerts
# TODO /etc/docker/mkcerts --outdir $JAVA_HOME/jre/lib/security


# Wait until namenode service is available
while ! echo exit | nc namenode.docker.net 8020; do sleep 10; done


# Create warehouse directories and sleep
su - alice <<'EOF'
hadoop fs -mkdir -p /user/hive/warehouse
hadoop fs -chown hive:hadoop /user/hive/warehouse
hadoop fs -chmod -R 1777 /user/hive/warehouse
sleep 4
EOF

# NOTE:
#   Cloudera recommends setting permissions on the Hive warehouse
#   directory to 1777, making it accessible to all users, with the
#   sticky bit set. This allows users to create and access their
#   tables, but prevents them from deleting tables they do not own.
#

# Start Hive server
service hive-server2 start


# Keep this container running
/etc/docker/idle
