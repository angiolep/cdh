<configuration>

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- HiveServer2                      -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

    <!--
      The TCP port number which this HiveServer binds a socket listener to
    -->
    <property>
        <name>hive.server2.thrift.port</name>
        <value>10000</value>
    </property>


    <!--
        URI of the Thrift metastore server which this HiveServer2 connects to
    -->
    <property>
      <name>hive.metastore.uris</name>
      <value>thrift://hivemetastore.docker.net:9083</value>
    </property>

    <!--
        The default location of non-external Hive tables in HDFS.
    -->
    <property>
      <name>hive.metastore.warehouse.dir</name>
      <value>/user/hive/warehouse</value>
    </property>


    <!--
      Whether hive supports concurrency or not.
      A zookeeper instance must be up and running for the
      default hive lock manager to support read-write locks.
    -->
    <property>
        <name>hive.support.concurrency</name>
        <value>false</value>
    </property>

    <!--
      Chooses data processing engine. Options are:
        * mr    (Map Reduce, default),
        * tez   (Tez execution, for Hadoop 2 only),
        * spark (Spark execution, for Hive 1.1.0 onward)
    -->
    <property>
        <name>hive.execution.engine</name>
        <value>mr</value>
    </property>



    {% if TLS_ENCRYPTION == 'true' %}
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- TLS/SSL Encryption               -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <property>
      <name>hive.server2.use.SSL</name>
      <value>true</value>
    </property>

    <property>
      <name>hive.server2.keystore.path</name>
      <value>${java.home}/lib/security/keystore.jks</value>
      <!-- NOTE that ${java.home} will be evaluated as "$JAVA_HOME/jre" -->
    </property>

    <property>
      <name>hive.server2.keystore.password</name>
      <value>changeit</value>
    </property>
    {% endif %}


    {% if HADOOP_AUTHENTICATION == 'kerberos' %}
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Kerberos Authentication          -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!--
      It is a client-facing property that controls the type of authentication
      HiveServer2 uses for connections to clients. In this case, HiveServer2
      uses Kerberos to authenticate incoming clients.
    -->
    <property>
      <name>hive.server2.authentication</name>
      <value>KERBEROS</value>
    </property>

    <!--
      It is the Kerberos principal for the host where HiveServer2 is running.
    -->
    <property>
      <name>hive.server2.authentication.kerberos.principal</name>
      <value>hive/docker.net@DOCKER.NET</value>
    </property>

    <!--
      It is the keytab file for that principal.
    -->
    <property>
      <name>hive.server2.authentication.kerberos.keytab</name>
      <value>/shared/secrets/hive.keytab</value>
    </property>

    <!--
      Enable user impersonation for HiveServer2 to let users execute queries
      and access HDFS files as the connected user rather than as the hive user.
    -->
    <property>
      <name>hive.server2.enable.impersonation</name>
      <value>true</value>
    </property>
    <property>
      <name>hive.server2.enable.doAs</name>
      <value>true</value>
    </property>
    {% endif %}

</configuration>
