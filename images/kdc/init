#!/usr/bin/env bash


# See https://www.cloudera.com/documentation/enterprise/5-15-x/topics/cdh_sg_kerberos_prin_keytab_deploy.html#topic_3_4
# Create Kerberos principals (with random keys) and export them to keytab files


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Add the given Hadoop principal (user/domain@DOCKER.NET)
# to the Kerberos database
function kerberos_add {
  user=$1
  domain=$2
  if [[ "${domain}" == "yes" ]]; then
    kadmin.local -q "addprinc -randkey $user/docker.net"
  else
    kadmin.local -q "addprinc -randkey $user"
  fi
}


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Merge the given users' secrets in a single resulting keytab file
function kerbers_merge {
  users=$1
  domain=$2
  file=$3
  princs=""
  for user in $users; do
    if [[ "${domain}" == "yes" ]]; then
      princs="$princs $user/docker.net"
    else
      princs="$princs $user"
    fi
  done
  kadmin.local -q "ktadd -norandkey -k /mount/secrets/$file $princs"
  chmod 644 /mount/secrets/$file
}


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Initialize a brand new Kerberos database
function kerberos_init {

  # Remove the old Kerberso database data/records
  rm -Rf /var/kerberos/krb5kdc/principal*
  rm -Rf /var/kerberos/krb5kdc/.k5.DOCKER.NET

  # The -s option indicates that we'll be using a stash file
  # to store what Kerberos calls the "master key"
  echo -e "root\nroot" | kdb5_util create -s

  # Make the directory where secrets are mount across the cluster
  mkdir -p /mount/secrets

  # Cleanup previous secrets (if any existed)
  rm -Rf /mount/secrets/*


  # ----------   user          domain
  kerberos_add   'alice'       'no'
  kerberos_add   'bob'         'no'
  kerberos_add   'charlie'     'no'
  kerberos_add   'david'       'no'
  kerberos_add   'spark'       'yes'
  kerberos_add   'HTTP'        'yes'
  kerberos_add   'hdfs'        'yes'
  kerberos_add   'yarn'        'yes'
  kerberos_add   'mapred'      'yes'
  kerberos_add   'hive'        'yes'


  # -----------  users         domain  file
  kerbers_merge  'alice'       'no'    'alice.keytab'
  kerbers_merge  'bob'         'no'    'bob.keytab'
  kerbers_merge  'charlie'     'no'    'charlie.keytab'
  kerbers_merge  'david'       'no'    'david.keytab'
  kerbers_merge  'spark'       'yes'   'spark.keytab'
  kerbers_merge  'HTTP'        'yes'   'HTTP.keytab'
  kerbers_merge  'hdfs HTTP'   'yes'   'hdfs.keytab'
  kerbers_merge  'yarn HTTP'   'yes'   'yarn.keytab'
  kerbers_merge  'mapred HTTP' 'yes'   'mapred.keytab'
  kerbers_merge  'hive'        'yes'   'hive.keytab'
}



# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# MAIN
kerberos_init
