#!/usr/bin/env bash

#
# Setup user accounts with proper ~/.bash_profile
#
chmod +x /etc/docker/setup
# --------------   user   group   domain
/etc/docker/setup  yarn   hadoop  docker.net


#
# Render configuration templates by replacing {{ PLACEHOLDER }}
# with corresponding shell environment variable values
chmod +x /etc/docker/render
/etc/docker/render  /etc/hadoop/conf/core-site.xml
/etc/docker/render  /etc/hadoop/conf/hdfs-site.xml
/etc/docker/render  /etc/hadoop/conf/mapred-site.xml
/etc/docker/render  /etc/hadoop/conf/yarn-site.xml


#
# Set Unix sticky bits on the container-executor script
#
chown root:yarn /usr/lib/hadoop-yarn/bin/container-executor
chmod 6050 /usr/lib/hadoop-yarn/bin/container-executor
# ---Sr-s--- root:yarn /usr/lib/hadoop-yarn/bin/container-executor

chown root:yarn /etc/hadoop/conf/container-executor.cfg
chmod 0400 /etc/hadoop/conf/container-executor.cfg


#
# Make local log directories
#
mkdir -p /var/log/hadoop-yarn
chown -R yarn:yarn /var/log/hadoop-yarn
chmod 755 /var/log/hadoop-yarn
# TODO ln -snf /dev/stdout /var/log/hadoop-yarn/hadoop-yarn-nodemanager-nodemanager1.docker.net.log


# Wait until namenode service is available
while ! echo exit | nc namenode.docker.net 8020; do sleep 10; done


#
# Make remote log directories
#
su - yarn <<'EOF'
hadoop fs -mkdir -p /var/log/hadoop-yarn
hadoop fs -chown yarn:hadoop /var/log/hadoop-yarn
hadoop fs -chmod 1777 /var/log/hadoop-yarn
EOF


# Make localized resources directories
mkdir -p /var/local/hadoop-yarn
chown -R yarn:yarn /var/local/hadoop-yarn
chmod 755 /var/local/hadoop-yarn


# Wait until resourecemanager service is available
while ! echo exit | nc resourcemanager.docker.net 8032; do sleep 10; done


# Start the Hadoop YARN NodeManager service
service hadoop-yarn-nodemanager start


# Keep this container running
/etc/docker/idle
