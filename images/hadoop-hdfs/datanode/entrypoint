#!/usr/bin/env bash

#
# Setup user accounts with proper ~/.bash_profile
#
#
# --------------   user   group   domain
/etc/docker/setup  hdfs   hadoop  docker.net


if [[ "$HADOOP_AUTHENTICATION" == "kerberos" ]]; then
cat <<EOF >> /etc/default/hadoop-hdfs-datanode
export HADOOP_SECURE_DN_USER=hdfs
export HADOOP_SECURE_DN_PID_DIR=/var/lib/hadoop-hdfs
export HADOOP_SECURE_DN_LOG_DIR=/var/log/hadoop-hdfs
export JSVC_HOME=/usr/lib/bigtop-utils/
EOF
fi



#
# Render configuration templates by replacing {{ PLACEHOLDER }}
# with corresponding shell environment variable values

/etc/docker/render  /etc/hadoop/conf/core-site.xml
/etc/docker/render  /etc/hadoop/conf/hdfs-site.xml


#
# Make log directories
#
mkdir -p /var/log/hadoop-hdfs
chown hdfs:hdfs /var/log/hadoop-hdfs
chmod 755 /var/log/hadoop-hdfs
# TODO ln -snf /dev/stdout /var/log/hadoop-hdfs/hadoop-hdfs-datanode-datanode1.docker.net.log


#
# Make local data directories
#
# export HADOOP_DFS_DROP=${HADOOP_DFS_DROP:-'yes'}
# if [[ "${HADOOP_DFS_DROP}" == "yes" ]]; then
#   rm -Rf /data/1/hdfs/dn
  mkdir -p /data/1/hdfs/dn
  chown -R hdfs:hdfs /data/1/hdfs/dn
  chmod 700 /data/1/hdfs/dn
# fi


# Wait until namenode service is available
while ! echo exit | nc namenode.docker.net 8020; do sleep 10; done


# Start the datanode service
service hadoop-hdfs-datanode start


# Keep this container running
/etc/docker/idle
